{"ast":null,"code":"import API from \"../../API\";\nimport { addRecomendedCartAction, fetchRecomendedCartItemsAction, increaseRecomendedCartAction, decreaseRecomendedCartAction } from \"./actions\"; // import { push } from \"connected-react-router\";\n\nconst api = new API(); // const CARTS_KEY = \"CARTS_KEY\";\n\nexport const fetchRecomendedCarts = () => {\n  return async dispatch => {\n    return api.getRecomendedCarts().then(recomendedcarts => {\n      const subtotal = calculateSubtotal(recomendedcarts);\n      dispatch(fetchRecomendedCartItemsAction(recomendedcarts, subtotal));\n    }).catch(error => {\n      alert(\"Failed to connect API: /recomendedcarts/\");\n    });\n  };\n};\nexport const addRecomendedCart = recomendeditem => {\n  return async (dispatch, getState) => {\n    return api.addRecomendedCarts(recomendeditem.id).then(addedRecomendedCart => {\n      let prevRecomendedCarts = getState().recomendedcarts.list;\n      addedRecomendedCart[\"recomendeditem\"] = recomendeditem;\n      prevRecomendedCarts.push(addedRecomendedCart);\n      const subtotal = calculateSubtotal(prevRecomendedCarts);\n      dispatch(addRecomendedCartAction(prevRecomendedCarts, subtotal));\n    }).catch(error => {\n      alert(\"Failed to connect API to add recomendedcart\");\n      console.log(error);\n    });\n  };\n};\nexport const increaseRecomendedCart = recomendedcart_id => {\n  return async (dispatch, getState) => {\n    let prevRecomendedCarts = getState().recomendedcarts.list;\n    let matchedRecomendedCarts = prevRecomendedCarts.filter(recomendedcart => recomendedcart.id === recomendedcart_id);\n    let nextSelectedCount = matchedRecomendedCarts[0].quantity + 1;\n    return api.updateRecomendedCarts(recomendedcart_id, nextSelectedCount).then(updatedRecomendedCart => {\n      prevRecomendedCarts = prevRecomendedCarts.filter(recomendedcart => recomendedcart.id !== recomendedcart_id);\n      prevRecomendedCarts.push(updatedRecomendedCart);\n      const subtotal = calculateSubtotal(prevRecomendedCarts);\n      dispatch(increaseRecomendedCartAction(prevRecomendedCarts, subtotal));\n    }).catch(error => {\n      alert(\"Failed to connect API to increase cart's quantity\");\n      console.log(error);\n    });\n  };\n};\nexport const decreaseRecomendedCart = recomendedcart_id => {\n  return async (dispatch, getState) => {\n    let prevRecomendedCarts = getState().recomendedcarts.list;\n    let matchedRecomendedCarts = prevRecomendedCarts.filter(recomendedcart => recomendedcart.id === recomendedcart_id);\n    let nextSelectedCount = matchedRecomendedCarts[0].quantity - 1;\n\n    if (nextSelectedCount > 0) {\n      // if quantity is more than 0, update\n      return api.updateRecomendedCarts(recomendedcart_id, nextSelectedCount).then(updatedRecomendedCart => {\n        prevRecomendedCarts = prevRecomendedCarts.filter(recomendedcart => recomendedcart.id !== recomendedcart_id);\n        prevRecomendedCarts.push(updatedRecomendedCart);\n        const subtotal = calculateSubtotal(prevRecomendedCarts);\n        dispatch(decreaseRecomendedCartAction(prevRecomendedCarts, subtotal));\n      }).catch(error => {\n        alert(\"Failed to connect API to decrease cart's quantity\");\n        console.log(error);\n      });\n    } else {\n      // if quantity is 0, delete\n      return api.deleteRecomendedCarts(recomendedcart_id).then(deletedRecomendedCarts => {\n        prevRecomendedCarts = prevRecomendedCarts.filter(recomendedcart => recomendedcart.id !== recomendedcart_id);\n        const subtotal = calculateSubtotal(prevRecomendedCarts);\n        dispatch(decreaseRecomendedCartAction(prevRecomendedCarts, subtotal));\n      }).catch(error => {\n        alert(\"Failed to connect API to decrease cart's quantity\");\n        console.log(error);\n      });\n    }\n  };\n};\n\nconst calculateSubtotal = recomendedcarts => {\n  let subtotal = 0;\n\n  for (let key in recomendedcarts) {\n    subtotal += Number(recomendedcarts[key].recomendeditem.price) * recomendedcarts[key].quantity;\n  }\n\n  return subtotal;\n};","map":{"version":3,"names":["API","addRecomendedCartAction","fetchRecomendedCartItemsAction","increaseRecomendedCartAction","decreaseRecomendedCartAction","api","fetchRecomendedCarts","dispatch","getRecomendedCarts","then","recomendedcarts","subtotal","calculateSubtotal","catch","error","alert","addRecomendedCart","recomendeditem","getState","addRecomendedCarts","id","addedRecomendedCart","prevRecomendedCarts","list","push","console","log","increaseRecomendedCart","recomendedcart_id","matchedRecomendedCarts","filter","recomendedcart","nextSelectedCount","quantity","updateRecomendedCarts","updatedRecomendedCart","decreaseRecomendedCart","deleteRecomendedCarts","deletedRecomendedCarts","key","Number","price"],"sources":["/Users/techi.s./Desktop/techis-wd-forum-django-react/frontend/src/reducks/recomendedcarts/operations.js"],"sourcesContent":["import API from \"../../API\";\nimport {\n  addRecomendedCartAction,\n  fetchRecomendedCartItemsAction,\n  increaseRecomendedCartAction,\n  decreaseRecomendedCartAction,\n} from \"./actions\";\n// import { push } from \"connected-react-router\";\n\nconst api = new API();\n// const CARTS_KEY = \"CARTS_KEY\";\n\nexport const fetchRecomendedCarts = () => {\n  return async (dispatch) => {\n    return api\n      .getRecomendedCarts()\n      .then((recomendedcarts) => {\n        const subtotal = calculateSubtotal(recomendedcarts);\n        dispatch(fetchRecomendedCartItemsAction(recomendedcarts, subtotal));\n      })\n      .catch((error) => {\n        alert(\"Failed to connect API: /recomendedcarts/\");\n      });\n  };\n};\n\nexport const addRecomendedCart = (recomendeditem) => {\n  return async (dispatch, getState) => {\n    return api\n      .addRecomendedCarts(recomendeditem.id)\n      .then((addedRecomendedCart) => {\n        let prevRecomendedCarts = getState().recomendedcarts.list;\n        addedRecomendedCart[\"recomendeditem\"] = recomendeditem;\n        prevRecomendedCarts.push(addedRecomendedCart);\n        const subtotal = calculateSubtotal(prevRecomendedCarts);\n        dispatch(addRecomendedCartAction(prevRecomendedCarts, subtotal));\n      })\n      .catch((error) => {\n        alert(\"Failed to connect API to add recomendedcart\");\n        console.log(error);\n      });\n  };\n};\n\nexport const increaseRecomendedCart = (recomendedcart_id) => {\n  return async (dispatch, getState) => {\n    let prevRecomendedCarts = getState().recomendedcarts.list;\n    let matchedRecomendedCarts = prevRecomendedCarts.filter(\n      (recomendedcart) => recomendedcart.id === recomendedcart_id\n    );\n    let nextSelectedCount = matchedRecomendedCarts[0].quantity + 1;\n    return api\n      .updateRecomendedCarts(recomendedcart_id, nextSelectedCount)\n      .then((updatedRecomendedCart) => {\n        prevRecomendedCarts = prevRecomendedCarts.filter(\n          (recomendedcart) => recomendedcart.id !== recomendedcart_id\n        );\n        prevRecomendedCarts.push(updatedRecomendedCart);\n        const subtotal = calculateSubtotal(prevRecomendedCarts);\n        dispatch(increaseRecomendedCartAction(prevRecomendedCarts, subtotal));\n      })\n      .catch((error) => {\n        alert(\"Failed to connect API to increase cart's quantity\");\n        console.log(error);\n      });\n  };\n};\n\nexport const decreaseRecomendedCart = (recomendedcart_id) => {\n  return async (dispatch, getState) => {\n    let prevRecomendedCarts = getState().recomendedcarts.list;\n    let matchedRecomendedCarts = prevRecomendedCarts.filter(\n      (recomendedcart) => recomendedcart.id === recomendedcart_id\n    );\n    let nextSelectedCount = matchedRecomendedCarts[0].quantity - 1;\n    if (nextSelectedCount > 0) {\n      // if quantity is more than 0, update\n      return api\n        .updateRecomendedCarts(recomendedcart_id, nextSelectedCount)\n        .then((updatedRecomendedCart) => {\n          prevRecomendedCarts = prevRecomendedCarts.filter(\n            (recomendedcart) => recomendedcart.id !== recomendedcart_id\n          );\n          prevRecomendedCarts.push(updatedRecomendedCart);\n          const subtotal = calculateSubtotal(prevRecomendedCarts);\n          dispatch(decreaseRecomendedCartAction(prevRecomendedCarts, subtotal));\n        })\n        .catch((error) => {\n          alert(\"Failed to connect API to decrease cart's quantity\");\n          console.log(error);\n        });\n    } else {\n      // if quantity is 0, delete\n      return api\n        .deleteRecomendedCarts(recomendedcart_id)\n        .then((deletedRecomendedCarts) => {\n          prevRecomendedCarts = prevRecomendedCarts.filter(\n            (recomendedcart) => recomendedcart.id !== recomendedcart_id\n          );\n          const subtotal = calculateSubtotal(prevRecomendedCarts);\n          dispatch(decreaseRecomendedCartAction(prevRecomendedCarts, subtotal));\n        })\n        .catch((error) => {\n          alert(\"Failed to connect API to decrease cart's quantity\");\n          console.log(error);\n        });\n    }\n  };\n};\n\nconst calculateSubtotal = (recomendedcarts) => {\n  let subtotal = 0;\n  for (let key in recomendedcarts) {\n    subtotal +=\n      Number(recomendedcarts[key].recomendeditem.price) *\n      recomendedcarts[key].quantity;\n  }\n  return subtotal;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}